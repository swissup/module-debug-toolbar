<?php 

$formatHelper = $this->helper('Mgt\DeveloperToolbar\Helper\Format');
$timers = $this->getTimers();
$sortedTimers = $this->sortTimers($timers);

?>

<div class="mgt-developer-toolbar-sidebar-profiler">
  <div class="mgt-developer-toolbar-sidebar-heading heading-filters">
    <h2><?= __('Profiler'); ?></h2>
    <div class="filters">
      <input id="entry_id" type="search" placeholder="Search entries..." />
      <label id="significant">
        <input id="significant_status" type="checkbox"/>
        Time >=
        <input id="significant_percent" type="number" min="0" max="100"/>%
      </label>
    </div>
  </div>
  <div class="mgt-developer-toolbar-sidebar-profiler-grid">
    <table id="profiler-grid" cellspacing="0" cellpadding="0" class="data-table data-table-profiler">
      <thead>
        <tr>
          <th><?= __('Timer'); ?></th>
          <th width="100px"><?= __('Time (ms)'); ?></th>
          <th width="100px"><?= __('AVG (ms)'); ?></th>
          <th width="60px"><?= __('Count'); ?></th>
        </tr>
      </thead>
      <tbody>
        <?php foreach ($sortedTimers as $timer): ?>
          <?php
            $percentage = $timer['percentage'] ?? 0;
            $significant = 2;
            $class = ['treegrid-' . $timer['uid']];

            if (isset($timer['parent'])) {
              $class[] = sprintf('treegrid-parent-%s', $timer['parent']);
            }
          ?>

          <tr class="<?= implode(' ', $class) ?>"
              data-id="<?= $timer['uid'] ?>"
              data-parent="<?= $timer['parent'] ?? '' ?>"
              data-percent="<?= $timer['percentage'] ?? '' ?>"
              data-label="<?= $timer['label'] ?>">
            <td><?= $timer['label'] ?></td>
            <td>
              <?= $formatHelper->formatTime($timer['sum']); ?>
              <?php if ($percentage > $significant): ?>
                <span class="time-percentage" style="width:<?= $percentage; ?>%"></span>
              <?php endif?>
            </td>
            <td><?= $formatHelper->formatTime($timer['avg']); ?></td>
            <td><?= $timer['count']; ?></td>
          </tr>
        <?php endforeach ?>
      </tbody>
    </table>
 </div>
</div>

<script>
  require([
    'jquery',
    'underscore',
    'Mgt_DeveloperToolbar/js/treegrid'
  ], function ($, _) {
    var storage = window.localStorage;

    setTimeout(() => {
      $('#entry_id').val(storage.getItem('dev_toolbar_entry_id') || '').trigger('input');
      $('#significant_percent').val(storage.getItem('dev_toolbar_significant_percent') || 2);
      $('#significant_status')
        .prop('checked', Boolean(Number(storage.getItem('dev_toolbar_significant_status'))))
        .trigger('input');
    }, 1);

    $('#significant input').on('input', _.debounce(function () {
      if (!$('#significant_percent').val().trim()) {
        $('#significant_percent').val(storage.getItem('dev_toolbar_significant_percent') || 2);
        $('#significant_status').prop('checked', false);
      } else if ($(this).is($('#significant_percent'))) {
        $('#significant_status').prop('checked', $('#significant_percent').val() > 0)
        storage.setItem('dev_toolbar_significant_percent', $('#significant_percent').val());
      }

      storage.setItem('dev_toolbar_significant_status', +$('#significant_status').prop('checked'));

      var value = $('#significant_percent').val().trim();
      if ($('#significant_status').prop('checked')) {
        $('#profiler-grid tbody tr')
          .filter((i, el) => $(el).data('percent') < value)
          .addClass('force-hidden-significant');

        $('#profiler-grid tbody tr')
          .filter((i, el) => $(el).data('percent') >= value)
          .removeClass('force-hidden-significant')
          .each(function () {
            $('#profiler-grid').treegrid('toggleRow', $(this), true);
          });
      } else {
        $('#profiler-grid tbody tr.force-hidden-significant')
          .removeClass('force-hidden-significant');
      }
    }, 150));

    $('#entry_id').on('input', _.debounce(function () {
      var value = $(this).val().trim();

      storage.setItem('dev_toolbar_entry_id', value);
      $('#profiler-grid tbody tr').css('background-color', '');

      if (value) {
        $(`#profiler-grid tbody tr:not([data-label*="${value}" i])`).addClass('force-hidden-id');
        $(`#profiler-grid tbody tr[data-label*="${value}" i]`)
          .removeClass('force-hidden-id')
          .css('background-color', '#feffdd');

        var i = 10;
        while (i--) {
          var parentIds = [... new Set(
            $('#profiler-grid tbody tr:not(.force-hidden-id)')
              .map((i, el) => `[data-id="${$(el).data('parent')}"]`)
          )];

          $(parentIds.join(',')).removeClass('force-hidden-id');
        }

        $('#profiler-grid tbody tr:not(.force-hidden-id)').each(function () {
          $('#profiler-grid').treegrid('toggleRow', $(this), true);
        });
      } else {
        $('#profiler-grid tbody tr.force-hidden-id').removeClass('force-hidden-id');
      }
    }, 300));

    $('#profiler-grid').treegrid({
      'initialState': 'collapsed'
    });
  });
</script>
